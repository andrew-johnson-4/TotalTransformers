import $"preludes/l1.tlc";

let expr: String = match argv {
   ("eval", expr) => eval(expr),
   _ => {
      print("help");
      print("\teval [expr]");
      exit(0); ""
   },
};

let eval(s: String) {
   match expr {
      f"{x}+{y}" => { x + y },
      f"{x}-{y}" => { x - y },
      t => {
         eprint(f"Error, invalid expression: {t}");
         exit(1); 0
      },
   }
};

//This code does not work yet on latest LSTS
//Several minor features are needed for this to work
//The only major feature needed here is CFG substructural pattern matching
